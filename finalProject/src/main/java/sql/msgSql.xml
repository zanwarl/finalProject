<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="korea.msg">


	<!-- msg list sql -->
	<select id="msgListSql" parameterType="map" resultType="korea.msg.model.MsgDTO">
	
	 <![CDATA[ 
  select * from (select rownum rnum,a.* from (select * from msg where idx in (
		select max (idx) from msg where sender = #{userIdx} or receiver = #{userIdx} group by msgIdx ) order by idx desc ) a)b 
		where rnum>=#{startNum} and rnum<=#{endNum} 
   ]]>
		<!-- select * from msg where idx in ( select max (idx) from msg where sender 
			= #{userIdx} or receiver = #{userIdx} group by msgIdx ) order by idx desc -->

	</select>




	<select id="msgTotalCnt" resultType="int" parameterType="String">
		<!-- select count (*) from ( select distinct msgIdx from msg where sender 
			= #{userIdx} or receiver= #{userIdx} ) -->


		select count(*)
		from (
		select * from msg
		where idx in (
		select max (idx)
		from msg where sender = #{userIdx} or
		receiver = #{userIdx} group by
		msgIdx ) order by idx desc)

	</select>



	<!-- msg content sql -->


	<select id="msgContentSql" parameterType="int"
		resultType="korea.msg.model.MsgDTO">
		
		select * from msg where msgIdx =#{msgIdx}  order by idx desc 
		
<!-- 		 <![CDATA[ 
  select * from 
  (select rownum rnum,a.* 
  from (select * from msg where msgIdx =#{msgIdx}  order by idx desc ) a)b 
  where rnum>=#{startNum} and rnum<=#{endNum} 
   ]]>
 -->
	</select>


	<select id="msgContentTotalCnt" resultType="int" parameterType="int">
		<!-- select count (*) from ( select distinct msgIdx from msg where sender 
			= #{userIdx} or receiver= #{userIdx} ) -->

		select count (*) from msg where msgIdx =#{msgIdx} order by idx desc
	</select>


	<!-- send msg sql -->
	<select id="isFirstSql" parameterType="map" resultType="int">

		select count (*) from (
		select
		distinct msgIdx from (
		select * from msg where
		sender = #{receiver} or
		receiver = #{receiver} )
		where sender =
		#{sender} or receiver =
		#{sender}
		)

	</select>

	<select id="getMsgIdxSql" parameterType="map" resultType="int">

		select
		distinct msgIdx from (
		select * from msg where sender = #{receiver} or
		receiver = #{receiver} )
		where sender = #{sender} or receiver
		=#{sender}
	</select>


	<select id="getMaxMsgIdxSql" parameterType="String" resultType="int">

		select max(msgIdx) 
		from msg 
		where sender =#{sender}
		or receiver	=#{sender}
	</select>

	<insert id="sendMsgSql" parameterType="korea.msg.model.MsgDTO">

		insert into msg values (

		msgIdx.nextval,
		#{msgIdx},
		#{sender},
		#{receiver},
		#{content},
		to_char (sysdate , 'yyyy/mm/dd/hh24:mi:ss'),
		0


		)

	</insert>


	<update id="readMsgSql" parameterType="map">
		update msg
		set isRead = 1
		where msgIdx = #{msgIdx} and isread !=1 and receiver = #{userIdx}

	</update>

	<select id="getUserIdSql" parameterType="int" resultType="String">
		select member_id from member where member_idx = #{userIdx}
	</select>


	<select id="getUserIdxSql" parameterType="String" resultType="int">
		select member_idx from member where member_id = #{userId}
	</select>
	



</mapper>